apply plugin: 'com.android.application'
def keystorePropertiesFile = rootProject.file(".buildconf/keystore.properties")
def keystoreProperties = new Properties()

def CONFIG = { k -> "\"${project.properties.get(k)}\"" }
def SUNAT_URL = "SUNAT_URL"
def CLIENT_ID = "CLIENT_ID"
def CLIENT_SECRET = "CLIENT_SECRET"

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "pe.gob.sunat.base.android"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 4
        versionName "1.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            buildConfigField "String", SUNAT_URL, CONFIG("production.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("production.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("production.client.secret")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        developer {
            initWith debug
            buildConfigField "String", SUNAT_URL, CONFIG("developer.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("developer.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("developer.client.secret")
            minifyEnabled false
            debuggable true
        }

        preRelease {
            minifyEnabled true
            debuggable true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", SUNAT_URL, CONFIG("developer.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("developer.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("developer.client.secret")
        }

        qa {
            initWith debug
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", SUNAT_URL, CONFIG("qa.sunat.gateway.url")
            buildConfigField "String", CLIENT_ID, CONFIG("qa.client.id")
            buildConfigField "String", CLIENT_SECRET, CONFIG("qa.client.secret")


        }
    }
}
ext {
    androidVersion = "28.0.0"
    retrofitVersion = '2.4.0'
    //daggerVersion = '2.40.1'
    daggerVersion = '2.21'
    //daggerVersion = '2.35.1'
    butterKnifeVersion = '10.2.3'
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.pnikosis:materialish-progress:1.7'
    implementation 'com.amitshekhar.android:android-networking:1.0.1'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    //Butter Knife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    //Crop Imagen
    api 'com.theartofdev.edmodo:android-image-cropper:2.7.+'

    implementation 'com.github.bumptech.glide:glide:3.7.0'


    // date & time picker
    implementation 'com.wdullaer:materialdatetimepicker:3.2.0'
    /*implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'*/
    implementation 'com.pusher:push-notifications-android:1.5.0'
    implementation "androidx.versionedparcelable:versionedparcelable:1.1.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    //implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    //implementation 'com.google.firebase:firebase-analytics:17.5.0'
    //implementation 'com.google.firebase:firebase-firestore:23.0.4'
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'junit:junit:4.12'

}

apply plugin: 'com.google.gms.google-services'
